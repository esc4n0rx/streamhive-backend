{
    "openapi": "3.0.0",
    "info": {
      "title": "Streamhive API - Authentication",
      "description": "API de autenticação para o aplicativo de streaming colaborativo Streamhive",
      "version": "1.0.0",
      "contact": {
        "name": "Streamhive Team",
        "email": "dev@streamhive.com"
      }
    },
    "servers": [
      {
        "url": "http://localhost:3000",
        "description": "Desenvolvimento"
      },
      {
        "url": "https://api.streamhive.com",
        "description": "Produção"
      }
    ],
    "paths": {
      "/health": {
        "get": {
          "tags": ["Health"],
          "summary": "Verificar status da API",
          "description": "Endpoint para verificar se a API está funcionando corretamente",
          "responses": {
            "200": {
              "description": "API funcionando normalmente",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HealthResponse"
                  },
                  "example": {
                    "success": true,
                    "message": "Streamhive API is running",
                    "timestamp": "2025-01-15T10:30:00.000Z",
                    "environment": "development"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/register": {
        "post": {
          "tags": ["Authentication"],
          "summary": "Registrar novo usuário",
          "description": "Cria uma nova conta de usuário no sistema",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterRequest"
                },
                "example": {
                  "name": "João Silva",
                  "username": "joaosilva",
                  "email": "joao@email.com",
                  "password": "MinhaSenh@123",
                  "birthDate": "1995-05-15",
                  "bio": "Desenvolvedor apaixonado por streaming"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Usuário criado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthSuccessResponse"
                  },
                  "example": {
                    "success": true,
                    "message": "User registered successfully",
                    "data": {
                      "user": {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "João Silva",
                        "username": "joaosilva",
                        "email": "joao@email.com",
                        "birthDate": "1995-05-15T00:00:00.000Z",
                        "avatarUrl": null,
                        "bio": "Desenvolvedor apaixonado por streaming",
                        "createdAt": "2025-01-15T10:30:00.000Z"
                      },
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                }
              }
            },
            "400": {
              "description": "Dados de entrada inválidos",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ValidationErrorResponse"
                  },
                  "example": {
                    "success": false,
                    "message": "Validation failed",
                    "errors": [
                      {
                        "field": "password",
                        "message": "Password must contain uppercase, lowercase, numbers and special characters"
                      }
                    ],
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                }
              }
            },
            "409": {
              "description": "Email ou username já existe",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "success": false,
                    "message": "Email already registered",
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                }
              }
            },
            "429": {
              "description": "Muitas tentativas de registro",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "success": false,
                    "message": "Too many authentication attempts, please try again later.",
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/login": {
        "post": {
          "tags": ["Authentication"],
          "summary": "Fazer login",
          "description": "Autentica um usuário e retorna token JWT",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                },
                "example": {
                  "username": "joaosilva",
                  "password": "MinhaSenh@123"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login realizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthSuccessResponse"
                  },
                  "example": {
                    "success": true,
                    "message": "Login successful",
                    "data": {
                      "user": {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "João Silva",
                        "username": "joaosilva",
                        "email": "joao@email.com",
                        "birthDate": "1995-05-15T00:00:00.000Z",
                        "avatarUrl": null,
                        "bio": "Desenvolvedor apaixonado por streaming"
                      },
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                }
              }
            },
            "400": {
              "description": "Dados de entrada inválidos",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ValidationErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Credenciais inválidas",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "success": false,
                    "message": "Invalid username or password",
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                }
              }
            },
            "429": {
              "description": "Muitas tentativas de login",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/profile": {
        "get": {
          "tags": ["Profile"],
          "summary": "Obter perfil do usuário",
          "description": "Retorna as informações do perfil do usuário autenticado",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Perfil obtido com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfileResponse"
                  },
                  "example": {
                    "success": true,
                    "message": "Profile retrieved successfully",
                    "data": {
                      "id": "550e8400-e29b-41d4-a716-446655440000",
                      "name": "João Silva",
                      "username": "joaosilva",
                      "email": "joao@email.com",
                      "birthDate": "1995-05-15T00:00:00.000Z",
                      "avatarUrl": "https://example.com/avatar.jpg",
                      "bio": "Desenvolvedor apaixonado por streaming",
                      "createdAt": "2025-01-15T10:30:00.000Z",
                      "updatedAt": "2025-01-15T10:30:00.000Z"
                    },
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "description": "Perfil não encontrado",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "success": false,
                    "message": "User profile not found",
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["Profile"],
          "summary": "Atualizar perfil do usuário",
          "description": "Atualiza as informações do perfil do usuário autenticado",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfileRequest"
                },
                "example": {
                  "name": "João Silva Santos",
                  "email": "joao.santos@email.com",
                  "birthDate": "1995-05-15",
                  "avatarUrl": "https://example.com/new-avatar.jpg",
                  "bio": "Desenvolvedor Full Stack apaixonado por streaming e tecnologia"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Perfil atualizado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProfileResponse"
                  },
                  "example": {
                    "success": true,
                    "message": "Profile updated successfully",
                    "data": {
                      "id": "550e8400-e29b-41d4-a716-446655440000",
                      "name": "João Silva Santos",
                      "username": "joaosilva",
                      "email": "joao.santos@email.com",
                      "birthDate": "1995-05-15T00:00:00.000Z",
                      "avatarUrl": "https://example.com/new-avatar.jpg",
                      "bio": "Desenvolvedor Full Stack apaixonado por streaming e tecnologia",
                      "updatedAt": "2025-01-15T11:00:00.000Z"
                    },
                    "timestamp": "2025-01-15T11:00:00.000Z"
                  }
                }
              }
            },
            "400": {
              "description": "Dados de entrada inválidos",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ValidationErrorResponse"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "description": "Usuário não encontrado",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "409": {
              "description": "Email já em uso por outro usuário",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "success": false,
                    "message": "Email already in use",
                    "timestamp": "2025-01-15T11:00:00.000Z"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/change-password": {
        "put": {
          "tags": ["Profile"],
          "summary": "Alterar senha",
          "description": "Altera a senha do usuário autenticado",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePasswordRequest"
                },
                "example": {
                  "currentPassword": "MinhaSenh@123",
                  "newPassword": "NovaSenha@456"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Senha alterada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SuccessResponse"
                  },
                  "example": {
                    "success": true,
                    "message": "Password changed successfully",
                    "data": null,
                    "timestamp": "2025-01-15T11:15:00.000Z"
                  }
                }
              }
            },
            "400": {
              "description": "Senha atual incorreta ou nova senha inválida",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "examples": {
                    "incorrect_password": {
                      "summary": "Senha atual incorreta",
                      "value": {
                        "success": false,
                        "message": "Current password is incorrect",
                        "timestamp": "2025-01-15T11:15:00.000Z"
                      }
                    },
                    "weak_password": {
                      "summary": "Nova senha muito fraca",
                      "value": {
                        "success": false,
                        "message": "Password must contain uppercase, lowercase, numbers and special characters",
                        "timestamp": "2025-01-15T11:15:00.000Z"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "404": {
              "description": "Usuário não encontrado",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/account": {
        "delete": {
          "tags": ["Account"],
          "summary": "Deletar conta",
          "description": "Remove a conta do usuário autenticado (soft delete)",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Conta deletada com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SuccessResponse"
                  },
                  "example": {
                    "success": true,
                    "message": "Account deleted successfully",
                    "data": null,
                    "timestamp": "2025-01-15T11:30:00.000Z"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/UnauthorizedError"
            },
            "500": {
              "description": "Erro interno do servidor",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "success": false,
                    "message": "Failed to delete account",
                    "timestamp": "2025-01-15T11:30:00.000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "description": "Token JWT obtido através do login"
        }
      },
      "schemas": {
        "RegisterRequest": {
          "type": "object",
          "required": ["name", "username", "email", "password", "birthDate"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100,
              "description": "Nome completo do usuário"
            },
            "username": {
              "type": "string",
              "minLength": 3,
              "maxLength": 50,
              "pattern": "^[a-zA-Z0-9_]+$",
              "description": "Nome de usuário único (apenas letras, números e underscore)"
            },
            "email": {
              "type": "string",
              "format": "email",
              "maxLength": 255,
              "description": "Email válido do usuário"
            },
            "password": {
              "type": "string",
              "minLength": 8,
              "maxLength": 128,
              "description": "Senha deve conter maiúsculas, minúsculas, números e caracteres especiais"
            },
            "birthDate": {
              "type": "string",
              "format": "date",
              "description": "Data de nascimento (idade mínima: 13 anos)"
            },
            "bio": {
              "type": "string",
              "maxLength": 500,
              "description": "Biografia do usuário (opcional)"
            }
          }
        },
        "LoginRequest": {
          "type": "object",
          "required": ["username", "password"],
          "properties": {
            "username": {
              "type": "string",
              "description": "Nome de usuário"
            },
            "password": {
              "type": "string",
              "description": "Senha do usuário"
            }
          }
        },
        "UpdateProfileRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100,
              "description": "Nome completo do usuário"
            },
            "email": {
              "type": "string",
              "format": "email",
              "maxLength": 255,
              "description": "Email válido do usuário"
            },
            "birthDate": {
              "type": "string",
              "format": "date",
              "description": "Data de nascimento"
            },
            "avatarUrl": {
              "type": "string",
              "format": "uri",
              "description": "URL do avatar do usuário"
            },
            "bio": {
              "type": "string",
              "maxLength": 500,
              "description": "Biografia do usuário"
            }
          }
        },
        "ChangePasswordRequest": {
          "type": "object",
          "required": ["currentPassword", "newPassword"],
          "properties": {
            "currentPassword": {
              "type": "string",
              "description": "Senha atual do usuário"
            },
            "newPassword": {
              "type": "string",
              "minLength": 8,
              "maxLength": 128,
              "description": "Nova senha (deve conter maiúsculas, minúsculas, números e caracteres especiais)"
            }
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "ID único do usuário"
            },
            "name": {
              "type": "string",
              "description": "Nome completo do usuário"
            },
            "username": {
              "type": "string",
              "description": "Nome de usuário único"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Email do usuário"
            },
            "birthDate": {
              "type": "string",
              "format": "date-time",
              "description": "Data de nascimento"
            },
            "avatarUrl": {
              "type": "string",
              "format": "uri",
              "nullable": true,
              "description": "URL do avatar do usuário"
            },
            "bio": {
              "type": "string",
              "nullable": true,
              "description": "Biografia do usuário"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Data de criação da conta"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Data da última atualização"
            }
          }
        },
        "AuthSuccessResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "message": {
              "type": "string"
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                },
                "token": {
                  "type": "string",
                  "description": "Token JWT para autenticação"
                }
              }
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "ProfileResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "message": {
              "type": "string"
            },
            "data": {
              "$ref": "#/components/schemas/User"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "SuccessResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "message": {
              "type": "string"
            },
            "data": {
              "nullable": true
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "ErrorResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "message": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "ValidationErrorResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "message": {
              "type": "string",
              "example": "Validation failed"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Campo que falhou na validação"
                  },
                  "message": {
                    "type": "string",
                    "description": "Mensagem de erro específica"
                  }
                }
              }
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "HealthResponse": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "message": {
              "type": "string",
              "example": "Streamhive API is running"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            },
            "environment": {
              "type": "string",
              "enum": ["development", "production"],
              "description": "Ambiente atual da aplicação"
            }
          }
        }
      },
      "responses": {
        "UnauthorizedError": {
          "description": "Token de acesso inválido ou ausente",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              },
              "examples": {
                "missing_token": {
                  "summary": "Token ausente",
                  "value": {
                    "success": false,
                    "message": "Access token is required",
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                },
                "invalid_token": {
                  "summary": "Token inválido",
                  "value": {
                    "success": false,
                    "message": "Invalid token",
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                },
                "expired_token": {
                  "summary": "Token expirado",
                  "value": {
                    "success": false,
                    "message": "Token expired",
                    "timestamp": "2025-01-15T10:30:00.000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      {
        "name": "Health",
        "description": "Endpoints de monitoramento da API"
      },
      {
        "name": "Authentication",
        "description": "Endpoints de autenticação (registro e login)"
      },
      {
        "name": "Profile",
        "description": "Endpoints de gerenciamento de perfil do usuário"
      },
      {
        "name": "Account",
        "description": "Endpoints de gerenciamento da conta do usuário"
      }
    ]
  }